version: '3.8'

services:
  scraper:
    build:
      context: .
      dockerfile: ./compose/local/scraper/Dockerfile
      args:
        - DEV=true
    image: comp-scraper
    container_name: comp-scraper
    networks:
      - comp-network
      # '/start' is the shell script used to run the service
    command: /start
    # this volume is used to map the files and folders on the host to the container
    # so if we change code on the host, code in the docker container will also be changed
    volumes:
      - ./scraper:/scraper
    ports:
      - 8010:8000
    # env_file is used to manage the env variables of our project
    env_file:
      - .env-dev
    depends_on:
      - comp-rabbitmq
      - comp-redis
      - tasks-db
      - comp-chrome
  api:
    build:
      context: .
      dockerfile: ./compose/local/api/Dockerfile
      args:
        - DEV=true
    image: comp-api
    container_name: comp-api
    networks:
      - comp-network
    command: /start
    volumes:
      - ./api:/api
    ports:
      - 8020:8000
    # env_file is used to manage the env variables of our project
    env_file:
      - .env-dev
    depends_on:
      - products-db
  tasks-db:
    image: postgres:15.3
    container_name: tasks-db
    networks:
      - comp-network
    volumes:
      - tasks-db-dev:/var/lib/postgresql/data/
    ports:
      - 25432:5432
    environment:
      - POSTGRES_DB=hello_django
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django
  products-db:
    image: postgres:15.3
    container_name: products-db
    networks:
      - comp-network
    volumes:
      - products-db-dev:/var/lib/postgresql/data/
    ports:
      - 15432:5432
    environment:
      - POSTGRES_DB=products
      - POSTGRES_USER=products
      - POSTGRES_PASSWORD=products
  comp-rabbitmq:
    image: rabbitmq:3.11-alpine
    container_name: comp-rabbitmq
    networks:
      - comp-network
    volumes:
      - comp-rabbitmq-data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=mypass
    ports:
      - 5672:5672
      - 15672:15672
  comp-redis:
    image: redis:7-alpine
    container_name: comp-redis
    networks:
      - comp-network
    volumes:
      - ./comp-redis-data:/data
  comp-worker:
    build:
      context: .
      dockerfile: ./compose/local/scraper/Dockerfile
    image: comp-worker
    container_name: comp-worker
    networks:
      - comp-network
    command: /start-celeryworker
    volumes:
      - ./scraper:/scraper
    env_file:
      - .env-dev
    depends_on:
      - comp-rabbitmq
      - comp-redis
      - tasks-db
  comp-beat:
    build:
      context: .
      dockerfile: ./compose/local/scraper/Dockerfile
    image: comp-beat
    container_name: comp-beat
    networks:
      - comp-network
    command: /start-celerybeat
    volumes:
      - ./scraper:/scraper
    env_file:
      - .env-dev
    depends_on:
      - comp-rabbitmq
      - comp-redis
      - tasks-db
  comp-flower:
    build:
      context: .
      dockerfile: ./compose/local/scraper/Dockerfile
    image: comp-flower
    container_name: comp-flower
    networks:
      - comp-network
    command: /start-flower
    volumes:
      - ./scraper:/scraper
    env_file:
      - .env-dev
    ports:
      - 5557:5555
    depends_on:
      - comp-rabbitmq
      - comp-redis
      - tasks-db
  comp-chrome:
    image: "selenium/standalone-chrome:latest"
    container_name: comp-chrome
    environment:
      - SE_VNC_NO_PASSWORD=1
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true
      - SE_NODE_MAX_INSTANCES=12
      - SE_NODE_MAX_SESSIONS=12
    networks:
      - comp-network
    hostname: comp-chrome
    shm_size: '2gb'
    restart: always
    ports:
      - 14444:4444

volumes:
  tasks-db-dev:
  products-db-dev:
  comp-redis-data:
  comp-rabbitmq-data:

networks:
  comp-network:
    name: comp-network
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.95.0/24